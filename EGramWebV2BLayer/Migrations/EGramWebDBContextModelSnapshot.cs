// <auto-generated />
using System;
using EGramWebV2BLayer.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EGramWebV2BLayer.Migrations
{
    [DbContext(typeof(EGramWebDBContext))]
    partial class EGramWebDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EGramWebV2BLayer.Entities.Models.PanelModels.LoginHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IP");

                    b.Property<DateTime>("LoginDate");

                    b.Property<bool>("Status");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LoginHistory");
                });

            modelBuilder.Entity("EGramWebV2BLayer.Entities.Models.PanelModels.UserMst", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastPassword");

                    b.Property<string>("LastPassword1");

                    b.Property<string>("LastPassword2");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int?>("PasswordAttempt");

                    b.Property<DateTime?>("UnlockDate");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<short>("UserTypeId");

                    b.HasKey("UserId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("UserMst");
                });

            modelBuilder.Entity("EGramWebV2BLayer.Entities.Models.PanelModels.UserTypeMst", b =>
                {
                    b.Property<short>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("UserTypeName");

                    b.HasKey("UserTypeId");

                    b.ToTable("UserTypeMst");
                });

            modelBuilder.Entity("EGramWebV2BLayer.Entities.Models.PanelModels.LoginHistory", b =>
                {
                    b.HasOne("EGramWebV2BLayer.Entities.Models.PanelModels.UserMst", "UserMst")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EGramWebV2BLayer.Entities.Models.PanelModels.UserMst", b =>
                {
                    b.HasOne("EGramWebV2BLayer.Entities.Models.PanelModels.UserTypeMst", "UserTypeMst")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
